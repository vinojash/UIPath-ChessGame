{
    "chromeEndPoint": "http://localhost:9222/json",
    "chromeParameter": "--remote-debugging-port=9222 --new-window ",
    "chromePath": "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe",
    "chromeMessageId": 12345,
    "pageTitle": "Chess",
    "JSFunction": "function isGameOver() {if(game.game_over()) {return 'YES';} else {return 'NO';}}; isGameOver();",
    "staticWebpage": "http://htmlpreview.github.io/?https://github.com/vinojash/UIPath-ChessGame/blob/master/public/index.html",
    "evaluateBoard": "function evaluateBoard(board, color) { var pieceValue = {'p': 100,'n': 350,'b': 350,'r': 525,'q': 1000,'k': 10000};var value = 0;board.forEach(function(row) {row.forEach(function(piece) {if (piece) {value += pieceValue[piece['type']]* (piece['color'] === color ? 1 : -1);}});});return value;}",
    "calcBestMove" : "function calcBestMove(depth, game, playerColor,alpha = Number.NEGATIVE_INFINITY,beta = Number.POSITIVE_INFINITY,isMaximizingPlayer = true) {if (depth === 0) {value = evaluateBoard(game.board(), playerColor);return [value, null]}var bestMove = null;var possibleMoves = game.moves();possibleMoves.sort(function(a, b) {return 0.5 - Math.random()});var bestMoveValue = isMaximizingPlayer ? Number.NEGATIVE_INFINITY :Number.POSITIVE_INFINITY;for (var i = 0; i < possibleMoves.length; i++) {var move = possibleMoves[i];game.move(move);value = calcBestMove(depth - 1, game, playerColor, alpha, beta, !isMaximizingPlayer)[0];if (isMaximizingPlayer) {if (value > bestMoveValue) {bestMoveValue = value;bestMove = move;}alpha = Math.max(alpha, value);} else {if (value < bestMoveValue) {bestMoveValue = value;bestMove = move;}beta = Math.min(beta, value);}game.undo();if (beta <= alpha) {break;}}return [bestMoveValue, bestMove || possibleMoves[0]];}"
}